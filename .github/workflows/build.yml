name: Build

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

env:
  IMAGE_NAME: "lumen-actions-sandbox"
  IMAGE_NAME_PRODUCTION: "lumen-actions"
  GCP_PROJECT: "lithe-breaker-191614"
  GCP_REGION: "us-central1"
  REPO_ROOT: "gcr.io"
  GCP_EMAIL: ${{ secrets.GCP_EMAIL }}
  GCP_KEY: ${{ secrets.GCP_KEY }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Directory Permissions
        run: mkdir -p storage bootstrap/cache && chmod -R 777 storage bootstrap/cache

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit

      - name: Set production environment
        if: contains(github.ref, 'production')
        run: |
          echo "::set-env name=IMAGE_NAME::$IMAGE_NAME_PRODUCTION"

      - name: Build the Docker image
        run: |
          php artisan version ${{ github.run_number }} ${{ github.head_ref }} >.version
          docker build . --file docker/Dockerfile \
            --tag "$IMAGE_NAME":"$GITHUB_RUN_NUMBER" \
            --tag "$REPO_ROOT"/"$GCP_PROJECT"/"$IMAGE_NAME":"$GITHUB_RUN_NUMBER"

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ env.GCP_KEY }}
      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push "$REPO_ROOT"/"$GCP_PROJECT"/"$IMAGE_NAME":"$GITHUB_RUN_NUMBER"

  deploy:
    name: Deploy to GCP Cloud Run
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_ENV: "staging"

    steps:
      - name: Set production values
        if: contains(github.ref, 'production') || contains(github.ref, 'master')
        run: |
          echo "::set-env name=APP_ENV::production"
          echo "::set-env name=IMAGE_NAME::$IMAGE_NAME_PRODUCTION"

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ env.GCP_KEY }}

      # Deploy image to Cloud Run
      - name: Deploying
        run: |
          gcloud --project "$GCP_PROJECT" \
            run deploy "$IMAGE_NAME" --region "$GCP_REGION" \
            --image "$REPO_ROOT"/"$GCP_PROJECT"/"$IMAGE_NAME":"$GITHUB_RUN_NUMBER" \
            --platform "managed" --port=80 \
            --allow-unauthenticated